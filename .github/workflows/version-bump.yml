name: Bump Version

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Type of version bump (major, minor, patch)'
        required: true
        default: patch

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install semver tool
        run: npm install -g semver

      # Check if there are changes in the Web API project
      - name: Check for Web API changes
        id: webapi
        run: |
          if git diff --quiet HEAD^ HEAD MyApp.WebApi; then
            echo "::set-output name=changed::false"
          else
            echo "::set-output name=changed::true"
          fi

      # Check if there are changes in the CronJob project
      - name: Check for CronJob changes
        id: cronjob
        run: |
          if git diff --quiet HEAD^ HEAD MyApp.CronJob; then
            echo "::set-output name=changed::false"
          else
            echo "::set-output name=changed::true"
          fi

      # If Web API has changes, determine its new version
      - name: Determine new version for Web API
        if: steps.webapi.outputs.changed == 'true'
        id: bump_webapi
        run: |
          current=$(grep -oPm1 '(?<=<Version>)[^<]+' MyApp.WebApi/MyApp.WebApi.csproj)
          echo "Current version (Web API): $current"
          bump_type=${{ github.event.inputs.bump }}
          new=$(semver -i $bump_type $current)
          echo "New version (Web API): $new"
          echo "::set-output name=new_version::$new"

      # If CronJob has changes, determine its new version
      - name: Determine new version for CronJob
        if: steps.cronjob.outputs.changed == 'true'
        id: bump_cronjob
        run: |
          current=$(grep -oPm1 '(?<=<Version>)[^<]+' MyApp.CronJob/MyApp.CronJob.csproj)
          echo "Current version (CronJob): $current"
          bump_type=${{ github.event.inputs.bump }}
          new=$(semver -i $bump_type $current)
          echo "New version (CronJob): $new"
          echo "::set-output name=new_version::$new"

      # Update the Web API csproj if changes detected
      - name: Update Web API csproj if changed
        if: steps.webapi.outputs.changed == 'true'
        run: |
          new_version=${{ steps.bump_webapi.outputs.new_version }}
          sed -i "s/<Version>.*<\/Version>/<Version>$new_version<\/Version>/" MyApp.WebApi/MyApp.WebApi.csproj

      # Update the CronJob csproj if changes detected
      - name: Update CronJob csproj if changed
        if: steps.cronjob.outputs.changed == 'true'
        run: |
          new_version=${{ steps.bump_cronjob.outputs.new_version }}
          sed -i "s/<Version>.*<\/Version>/<Version>$new_version<\/Version>/" MyApp.CronJob/MyApp.CronJob.csproj

      # Update the Web API Helm chart files if changes detected
      - name: Update Web API Helm chart if changed
        if: steps.webapi.outputs.changed == 'true'
        run: |
          new_version=${{ steps.bump_webapi.outputs.new_version }}
          sed -i "s/^version: .*/version: $new_version/" charts/webapi/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: $new_version/" charts/webapi/Chart.yaml
          sed -i "s/tag: \".*\"/tag: \"$new_version\"/" charts/webapi/values.yaml

      # Update the CronJob Helm chart files if changes detected
      - name: Update CronJob Helm chart if changed
        if: steps.cronjob.outputs.changed == 'true'
        run: |
          new_version=${{ steps.bump_cronjob.outputs.new_version }}
          sed -i "s/^version: .*/version: $new_version/" charts/cronjob/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: $new_version/" charts/cronjob/Chart.yaml
          sed -i "s/tag: \".*\"/tag: \"$new_version\"/" charts/cronjob/values.yaml

      # Update the umbrella chart if either project changed.
      - name: Update Umbrella Helm chart if any change
        if: steps.webapi.outputs.changed == 'true' || steps.cronjob.outputs.changed == 'true'
        run: |
          # Prefer Web API version if available; otherwise, use CronJob's.
          new_version=${{ steps.bump_webapi.outputs.new_version }}
          if [ -z "$new_version" ]; then new_version=${{ steps.bump_cronjob.outputs.new_version }}; fi
          sed -i "s/^version: .*/version: \"$new_version\"/" charts/umbrella/Chart.yaml
          # Update dependency versions for Web API and CronJob in the umbrella chart.
          sed -i "s/\(name: myapp-webapi\s*version:\s*\).*/\1\"$new_version\"/" charts/umbrella/Chart.yaml
          sed -i "s/\(name: myapp-cronjob\s*version:\s*\).*/\1\"$new_version\"/" charts/umbrella/Chart.yaml

      # Commit and push the changes.
      - name: Commit and push version bump
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add .
          git commit -m "Bump version: Web API: ${{ steps.bump_webapi.outputs.new_version }} CronJob: ${{ steps.bump_cronjob.outputs.new_version }}"
          git push origin main
        env:
          GIT_AUTH_TOKEN: ${{ secrets.GHCR_PAT }}
